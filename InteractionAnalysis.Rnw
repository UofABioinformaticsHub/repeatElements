\documentclass{article}
\usepackage{underscore}
\usepackage{booktabs}
\usepackage{float}
\usepackage{subfig}
\usepackage{titling}
\usepackage{a4wide}
\usepackage{placeins}

\begin{document}

\title{Tissue-Specific Behaviours of TEs}
\author{Steve Pederson\\
        Adelaide University\\
        Bioinformatics Hub}
\maketitle

\section{Data Setup}

<<loadPackages, include=TRUE, echo=TRUE, warning=FALSE, message=FALSE>>=
library(ggplot2)
library(readr)
library(dplyr)
library(reshape2)
library(matrixStats)
library(xtable)
source("extraFunctions.R")
library(knitr)
@

<<knitrSetup, include=FALSE>>=
knit_hooks$set(crop=hook_pdfcrop)
opts_knit$set(self.contained=FALSE)
opts_chunk$set(fig.align='center', fig.show='as.is', crop=TRUE, include=TRUE, echo=TRUE)
pdf.options(useDingbats=TRUE)
@

<<TPMData, cache=TRUE>>=
tpmFile <- file.path("data", "new_whole_gene_expression_dataset.txt")
tpmData <- read.delim(tpmFile, sep="\t", stringsAsFactors = FALSE) %>% 
  select(ID, length, contains("TPM"), contains("utr5")) %>%
  tbl_df
allTE <- grep("utr5", colnames(tpmData), value=TRUE)
tpmData$RE <- tpmData %>% 
  dplyr::select(one_of(allTE)) %>%
  rowSums %>% 
  as.logical
@

<<normalisedTPM, cache=TRUE, dependson='TPMData'>>=
normalisedTPM <- tpmData %>% 
  dplyr::select(ID, contains("TPM"), RE, length) %>%
  melt(c("ID", "RE", "length"), 
       grep("TPM", colnames(tpmData), value = TRUE),
       "Tissue",
       value.name = "TPM") %>%
  mutate(Tissue = gsub("_TPM", "", Tissue)) %>%
  mutate(Tissue = capwords(Tissue)) %>%
  filter(TPM > -Inf) %>%
  mutate(normalisedTPM = TPM - log(length)) %>%
  tbl_df
@

\section{Individual Analysis of UTR5 Elements}

The data and packages were loaded as beforehand, and the TPM values were once again normalised for length.
Instead of following the global patterns, the behaviours of the individual elements was explored.
Before proceeding any further, the patterns of the REs was investigated.

<<individualElements, cache=TRUE, dependson='TPMData'>>=
indData <- tpmData %>%  
  dplyr::select(ID, contains("TPM"), contains("IDs") , length) %>%
  melt(c("ID", "length", allTE), 
       grep("TPM", colnames(tpmData), value = TRUE),
       "Tissue",
       value.name = "TPM") %>%
  mutate(Tissue = gsub("_TPM", "", Tissue)) %>%
  mutate(Tissue = capwords(Tissue)) %>%
  filter(TPM > -Inf) %>%
  mutate(normalisedTPM = TPM - log(length)) %>%
  tbl_df 
@

<<elementCounts>>=
elementCounts <- indData %>% 
  group_by(Tissue) %>% 
  summarise_each(funs(sum), contains("utr5")) 
elementCounts$Total <- indData %>% 
  group_by(Tissue) %>% 
  summarise(Total = n()) %>% 
  select(Total) %>% 
  unlist
colnames(elementCounts) <-gsub("_utr5_IDs", "", colnames(elementCounts))
@

<<xtabElementCounts, echo=FALSE, results='asis'>>=
elementCounts %>%
  xtable(caption = "Numbers of detectable genes with each element, along with the total number of detectable genes for each Tissue",
         label = "tab:elementCounts") %>%
  print(caption.placement = "top",
        include.rownames = FALSE)
@

The numbers of genes with detectable expression within each Tissue type are shown in Table \ref{tab:elementCounts}, along with the numbers of detectable genes with each RE.
It was then noted that the numbers of genes with only a single element were very low, with the maximum percentage across all tissues shown for each element in Table \ref{tab:singlePerc}.
As such, any baseline estimates for the effects on expression for each TE acting in isolation would be likely to be biased towards this unrepresentative set of genes.
The previous interaction analysis should be disregarded on this basis.

<<singlePerc>>=
singlePerc <- indData %>% 
  mutate(nbrElements = L1_utr5_IDs + alu_utr5_IDs + 
           LTR_utr5_IDs + mir_utr5_IDs + L2_utr5_IDs) %>%
  filter(nbrElements == 1) %>%
  group_by(Tissue) %>% 
  summarise_each(funs(sum), contains("utr5")) %>%
  select(-Tissue) %>%
  as.matrix()*100 / as.matrix(select(elementCounts, -Tissue, -Total)) 
colnames(singlePerc) <-gsub("_utr5_IDs", "", colnames(singlePerc))
@

<<xTabSinglePerc, echo=FALSE, results='asis'>>=
data.frame(Percentage= apply(singlePerc,2,max)) %>%
  add_rownames("Element") %>%
  xtable(caption = "Percentage of each TE found with no other TEs. Numbers given are the maximums across all tissues",
         label = "tab:singlePerc") %>%
  print(caption.placement = "top",
        include.rownames = FALSE)
@

\section{Interactions on a Tissue-Specific Basis}
The analysis was instead performed checking for any tissue specific effects for each individual element.
The initial model was specified for all elements, then using the automated function \texttt{step} interaction terms for tissue and elements were removed if not contributing significantly to the model fit.

<<indLim, tidy=TRUE, cache=TRUE, results='hide'>>=
indLm <- lm(normalisedTPM ~ 0 + length +
              Tissue*(alu_utr5_IDs + L1_utr5_IDs + L2_utr5_IDs + LTR_utr5_IDs + mir_utr5_IDs),
   data = indData) %>%
  step
@


After fitting, the model had an adjusted $R^2$ value of \Sexpr{format(summary(indLm)$adj.r.squared, digits=4)}.
Diagnostic plots are included as Figure \ref{fig:indLmPlot}.
As seen in Table \ref{tab:lmIndEl}, the results can be summarised by:
\begin{itemize}
  \item \textit{alu} \& \textit{L1} elements do not appear to be contributing to reduced gene expression and were removed from the model as part of the step-wise fitting procedure.
  \item All other elements do appear to contribute to reduced gene expression, with LTR elements showing the greatest impact
  \item It should be noted clearly however, that the estimated effects of each element are for Adipose Tissue as the baseline, with the interaction terms describing the difference in each tissue in comparison to this baseline.
  \item LTR elements seem to have a reduced impact on gene expression in the Brain ($P_{adj} = 1.80E-03$), where the reduction of gene expression only appears to be about one third of what would be expected in Adipose Tissue.
  \item LTR elements in Skeletal Muscle and Liver seem to behave near identically to Adipose tissue, whilst in Kidney and Testes, non-significant, but positive interaction terms were obtained.
  \item No other Tissue-specific behaviours were detected.
\end{itemize}

<<indLimXTab, echo=FALSE, include=TRUE, results='asis'>>=
summary(indLm) %>% 
  coef %>% 
  as.data.frame %>% 
  add_rownames("Coefficient") %>% 
  mutate(Coefficient = gsub("Tissue", "Tissue = ", Coefficient),
         Coefficient = gsub("_utr5_IDs", "", Coefficient),
         Coefficient = gsub("length", "Length", Coefficient),
         Padj = p.adjust(`Pr(>|t|)`, method = "bonferroni"),
         ` ` =  aster(Padj)) %>%
  select(-contains("Std")) %>%
  rename(T = `t value`) %>%
  xtable(caption = "Analysis of the effects of individual elements across all tissues. All $p$-values are adjusted using Bonferroni's method. Zero $p$ values indicate a value below than the limits of machine precision. Significance levels based on the adjusted $p$-values are indicated using asterisks as per the standard R conventions.",
         digits = rbind(c(0, 0, -3, 3, -2, -2, 0),
                        matrix(c(0, 0, 3, 3, -2, -2, 0), ncol = 7, nrow = length(coef(indLm)) -1, byrow = TRUE)),
         label = "tab:lmIndEl") %>%
  print(caption.placement = "top",
        include.rownames = FALSE)
@


\clearpage
\appendix

<<indLmPlot, cache=TRUE, dependson='indLm', echo=FALSE, include=FALSE>>=
png("figure/diagPlotsIndLm.png", height = 7, width = 7, units = "in", res = 300)
par(mfrow=c(2, 2))
plot(indLm)
par(mfrow=c(1, 1))
dev.off()
@

\begin{figure}
  \centering 
  \includegraphics[width=.95\textwidth]{figure/diagPlotsIndLm.png} 
  \caption[Diagnostic plots for fitting of individual TEs across all Tissues]{Diagnostic plots for fitting of individual TEs. 
  Note the appearance of outlier points which are due to the long genes such as TTN and MUC16. 
  Other than these points, no violations of the model assumptions were deemed to be serious enough to invalidate the model.}
  \label{fig:indLmPlot}
\end{figure}

\FloatBarrier
\section{Additional R Info}

The above required the additional functions from the file \texttt{extraFunctions.R} as provided below

<<printCapwords, echo=TRUE, include=TRUE, tidy=TRUE, comment="", results='markup'>>=
capwords
@


<<sessionInfo, echo=FALSE, include=TRUE, results='markup'>>=
sessionInfo()
@



\end{document}